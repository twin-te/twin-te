name: cd-production
on:
  push:
    tags:
      - "*"
  workflow_dispatch:

jobs:
  push-image-back:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Check if the event is push to master
        if: github.ref != 'refs/heads/master'
        run: |
          exit 1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push
        uses: docker/build-push-action@v2
        with:
          context: back
          target: deploy
          push: true
          tags: ghcr.io/twin-te/twin-te:back-prod
          cache-from: type=gha
          cache-to: type=gha,mode=max

  push-image-front:
    runs-on: ubuntu-latest
    environment: prod
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Check if the event is push to master
        if: github.ref != 'refs/heads/master'
        run: |
          exit 1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push
        uses: docker/build-push-action@v2
        with:
          context: front
          target: production-deploy
          push: true
          tags: ghcr.io/twin-te/twin-te:front-prod
          cache-from: type=gha
          cache-to: type=gha,mode=max
          secrets: |
            "SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}"

  push-image-sponsorship:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Check if the event is push to master
        if: github.ref != 'refs/heads/master'
        run: |
          exit 1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push
        uses: docker/build-push-action@v2
        with:
          context: sponsorship
          target: production-deploy
          push: true
          tags: ghcr.io/twin-te/twin-te:sponsorship-prod
          cache-from: type=gha
          cache-to: type=gha,mode=max

  push-image-parser:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Check if the event is push to master
        if: github.ref != 'refs/heads/master'
        run: |
          exit 1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push
        uses: docker/build-push-action@v2
        with:
          context: parser
          push: true
          tags: ghcr.io/twin-te/twin-te:parser-prod
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    runs-on: ubuntu-latest
    needs:
      [
        push-image-back,
        push-image-front,
        push-image-sponsorship,
        push-image-parser,
      ]
    environment: prod
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Check if the event is push to master
        if: github.ref != 'refs/heads/master'
        run: |
          exit 1
      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.SSH_PRIV_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -H -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_APP_HOST }} >> ~/.ssh/known_hosts
          ssh-keyscan -H -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_DB_HOST }} >> ~/.ssh/known_hosts
      - name: Deploy to APP Server
        run: |
          ssh ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_APP_HOST }} -p ${{ secrets.SSH_PORT }} "~/twin-te/infra/production/app/script/deploy.sh"
      - name: Deploy to DB Server
        run: |
          ssh ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_DB_HOST }} -p ${{ secrets.SSH_PORT }} "~/twin-te/infra/production/db/deploy.sh"
