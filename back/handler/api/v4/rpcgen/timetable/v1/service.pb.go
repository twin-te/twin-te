// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: timetable/v1/service.proto

package timetablev1

import (
	sharedpb "github.com/twin-te/twin-te/back/handler/api/v4/rpcgen/sharedpb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListCoursesByCodesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Year          *sharedpb.AcademicYear `protobuf:"bytes,1,opt,name=year,proto3" json:"year,omitempty"`
	Codes         []string               `protobuf:"bytes,2,rep,name=codes,proto3" json:"codes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCoursesByCodesRequest) Reset() {
	*x = ListCoursesByCodesRequest{}
	mi := &file_timetable_v1_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCoursesByCodesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCoursesByCodesRequest) ProtoMessage() {}

func (x *ListCoursesByCodesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timetable_v1_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCoursesByCodesRequest.ProtoReflect.Descriptor instead.
func (*ListCoursesByCodesRequest) Descriptor() ([]byte, []int) {
	return file_timetable_v1_service_proto_rawDescGZIP(), []int{0}
}

func (x *ListCoursesByCodesRequest) GetYear() *sharedpb.AcademicYear {
	if x != nil {
		return x.Year
	}
	return nil
}

func (x *ListCoursesByCodesRequest) GetCodes() []string {
	if x != nil {
		return x.Codes
	}
	return nil
}

type ListCoursesByCodesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Courses       []*Course              `protobuf:"bytes,1,rep,name=courses,proto3" json:"courses,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCoursesByCodesResponse) Reset() {
	*x = ListCoursesByCodesResponse{}
	mi := &file_timetable_v1_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCoursesByCodesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCoursesByCodesResponse) ProtoMessage() {}

func (x *ListCoursesByCodesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_timetable_v1_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCoursesByCodesResponse.ProtoReflect.Descriptor instead.
func (*ListCoursesByCodesResponse) Descriptor() ([]byte, []int) {
	return file_timetable_v1_service_proto_rawDescGZIP(), []int{1}
}

func (x *ListCoursesByCodesResponse) GetCourses() []*Course {
	if x != nil {
		return x.Courses
	}
	return nil
}

type SearchCoursesRequest struct {
	state                        protoimpl.MessageState `protogen:"open.v1"`
	Year                         *sharedpb.AcademicYear `protobuf:"bytes,1,opt,name=year,proto3" json:"year,omitempty"`
	Keywords                     []string               `protobuf:"bytes,2,rep,name=keywords,proto3" json:"keywords,omitempty"`
	CodePrefixesIncluded         []string               `protobuf:"bytes,3,rep,name=code_prefixes_included,json=codePrefixesIncluded,proto3" json:"code_prefixes_included,omitempty"`
	CodePrefixesExcluded         []string               `protobuf:"bytes,4,rep,name=code_prefixes_excluded,json=codePrefixesExcluded,proto3" json:"code_prefixes_excluded,omitempty"`
	SchedulesFullyIncluded       []*Schedule            `protobuf:"bytes,5,rep,name=schedules_fully_included,json=schedulesFullyIncluded,proto3" json:"schedules_fully_included,omitempty"`
	SchedulesPartiallyOverlapped []*Schedule            `protobuf:"bytes,6,rep,name=schedules_partially_overlapped,json=schedulesPartiallyOverlapped,proto3" json:"schedules_partially_overlapped,omitempty"`
	Limit                        int32                  `protobuf:"varint,7,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset                       int32                  `protobuf:"varint,8,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *SearchCoursesRequest) Reset() {
	*x = SearchCoursesRequest{}
	mi := &file_timetable_v1_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchCoursesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchCoursesRequest) ProtoMessage() {}

func (x *SearchCoursesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timetable_v1_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchCoursesRequest.ProtoReflect.Descriptor instead.
func (*SearchCoursesRequest) Descriptor() ([]byte, []int) {
	return file_timetable_v1_service_proto_rawDescGZIP(), []int{2}
}

func (x *SearchCoursesRequest) GetYear() *sharedpb.AcademicYear {
	if x != nil {
		return x.Year
	}
	return nil
}

func (x *SearchCoursesRequest) GetKeywords() []string {
	if x != nil {
		return x.Keywords
	}
	return nil
}

func (x *SearchCoursesRequest) GetCodePrefixesIncluded() []string {
	if x != nil {
		return x.CodePrefixesIncluded
	}
	return nil
}

func (x *SearchCoursesRequest) GetCodePrefixesExcluded() []string {
	if x != nil {
		return x.CodePrefixesExcluded
	}
	return nil
}

func (x *SearchCoursesRequest) GetSchedulesFullyIncluded() []*Schedule {
	if x != nil {
		return x.SchedulesFullyIncluded
	}
	return nil
}

func (x *SearchCoursesRequest) GetSchedulesPartiallyOverlapped() []*Schedule {
	if x != nil {
		return x.SchedulesPartiallyOverlapped
	}
	return nil
}

func (x *SearchCoursesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchCoursesRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type SearchCoursesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Courses       []*Course              `protobuf:"bytes,1,rep,name=courses,proto3" json:"courses,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchCoursesResponse) Reset() {
	*x = SearchCoursesResponse{}
	mi := &file_timetable_v1_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchCoursesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchCoursesResponse) ProtoMessage() {}

func (x *SearchCoursesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_timetable_v1_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchCoursesResponse.ProtoReflect.Descriptor instead.
func (*SearchCoursesResponse) Descriptor() ([]byte, []int) {
	return file_timetable_v1_service_proto_rawDescGZIP(), []int{3}
}

func (x *SearchCoursesResponse) GetCourses() []*Course {
	if x != nil {
		return x.Courses
	}
	return nil
}

type CreateRegisteredCoursesByCodesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Year          *sharedpb.AcademicYear `protobuf:"bytes,1,opt,name=year,proto3" json:"year,omitempty"`
	Codes         []string               `protobuf:"bytes,2,rep,name=codes,proto3" json:"codes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRegisteredCoursesByCodesRequest) Reset() {
	*x = CreateRegisteredCoursesByCodesRequest{}
	mi := &file_timetable_v1_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRegisteredCoursesByCodesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRegisteredCoursesByCodesRequest) ProtoMessage() {}

func (x *CreateRegisteredCoursesByCodesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timetable_v1_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRegisteredCoursesByCodesRequest.ProtoReflect.Descriptor instead.
func (*CreateRegisteredCoursesByCodesRequest) Descriptor() ([]byte, []int) {
	return file_timetable_v1_service_proto_rawDescGZIP(), []int{4}
}

func (x *CreateRegisteredCoursesByCodesRequest) GetYear() *sharedpb.AcademicYear {
	if x != nil {
		return x.Year
	}
	return nil
}

func (x *CreateRegisteredCoursesByCodesRequest) GetCodes() []string {
	if x != nil {
		return x.Codes
	}
	return nil
}

type CreateRegisteredCoursesByCodesResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	RegisteredCourses []*RegisteredCourse    `protobuf:"bytes,1,rep,name=registered_courses,json=registeredCourses,proto3" json:"registered_courses,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CreateRegisteredCoursesByCodesResponse) Reset() {
	*x = CreateRegisteredCoursesByCodesResponse{}
	mi := &file_timetable_v1_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRegisteredCoursesByCodesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRegisteredCoursesByCodesResponse) ProtoMessage() {}

func (x *CreateRegisteredCoursesByCodesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_timetable_v1_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRegisteredCoursesByCodesResponse.ProtoReflect.Descriptor instead.
func (*CreateRegisteredCoursesByCodesResponse) Descriptor() ([]byte, []int) {
	return file_timetable_v1_service_proto_rawDescGZIP(), []int{5}
}

func (x *CreateRegisteredCoursesByCodesResponse) GetRegisteredCourses() []*RegisteredCourse {
	if x != nil {
		return x.RegisteredCourses
	}
	return nil
}

type CreateRegisteredCourseManuallyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Year          *sharedpb.AcademicYear `protobuf:"bytes,1,opt,name=year,proto3" json:"year,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Instructors   string                 `protobuf:"bytes,3,opt,name=instructors,proto3" json:"instructors,omitempty"`
	Credit        string                 `protobuf:"bytes,4,opt,name=credit,proto3" json:"credit,omitempty"`
	Methods       []CourseMethod         `protobuf:"varint,5,rep,packed,name=methods,proto3,enum=timetable.v1.CourseMethod" json:"methods,omitempty"`
	Schedules     []*Schedule            `protobuf:"bytes,6,rep,name=schedules,proto3" json:"schedules,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRegisteredCourseManuallyRequest) Reset() {
	*x = CreateRegisteredCourseManuallyRequest{}
	mi := &file_timetable_v1_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRegisteredCourseManuallyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRegisteredCourseManuallyRequest) ProtoMessage() {}

func (x *CreateRegisteredCourseManuallyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timetable_v1_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRegisteredCourseManuallyRequest.ProtoReflect.Descriptor instead.
func (*CreateRegisteredCourseManuallyRequest) Descriptor() ([]byte, []int) {
	return file_timetable_v1_service_proto_rawDescGZIP(), []int{6}
}

func (x *CreateRegisteredCourseManuallyRequest) GetYear() *sharedpb.AcademicYear {
	if x != nil {
		return x.Year
	}
	return nil
}

func (x *CreateRegisteredCourseManuallyRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateRegisteredCourseManuallyRequest) GetInstructors() string {
	if x != nil {
		return x.Instructors
	}
	return ""
}

func (x *CreateRegisteredCourseManuallyRequest) GetCredit() string {
	if x != nil {
		return x.Credit
	}
	return ""
}

func (x *CreateRegisteredCourseManuallyRequest) GetMethods() []CourseMethod {
	if x != nil {
		return x.Methods
	}
	return nil
}

func (x *CreateRegisteredCourseManuallyRequest) GetSchedules() []*Schedule {
	if x != nil {
		return x.Schedules
	}
	return nil
}

type CreateRegisteredCourseManuallyResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	RegisteredCourse *RegisteredCourse      `protobuf:"bytes,1,opt,name=registered_course,json=registeredCourse,proto3" json:"registered_course,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CreateRegisteredCourseManuallyResponse) Reset() {
	*x = CreateRegisteredCourseManuallyResponse{}
	mi := &file_timetable_v1_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRegisteredCourseManuallyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRegisteredCourseManuallyResponse) ProtoMessage() {}

func (x *CreateRegisteredCourseManuallyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_timetable_v1_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRegisteredCourseManuallyResponse.ProtoReflect.Descriptor instead.
func (*CreateRegisteredCourseManuallyResponse) Descriptor() ([]byte, []int) {
	return file_timetable_v1_service_proto_rawDescGZIP(), []int{7}
}

func (x *CreateRegisteredCourseManuallyResponse) GetRegisteredCourse() *RegisteredCourse {
	if x != nil {
		return x.RegisteredCourse
	}
	return nil
}

type ListRegisteredCoursesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Year          *sharedpb.AcademicYear `protobuf:"bytes,1,opt,name=year,proto3,oneof" json:"year,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRegisteredCoursesRequest) Reset() {
	*x = ListRegisteredCoursesRequest{}
	mi := &file_timetable_v1_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRegisteredCoursesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRegisteredCoursesRequest) ProtoMessage() {}

func (x *ListRegisteredCoursesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timetable_v1_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRegisteredCoursesRequest.ProtoReflect.Descriptor instead.
func (*ListRegisteredCoursesRequest) Descriptor() ([]byte, []int) {
	return file_timetable_v1_service_proto_rawDescGZIP(), []int{8}
}

func (x *ListRegisteredCoursesRequest) GetYear() *sharedpb.AcademicYear {
	if x != nil {
		return x.Year
	}
	return nil
}

type ListRegisteredCoursesResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	RegisteredCourses []*RegisteredCourse    `protobuf:"bytes,1,rep,name=registered_courses,json=registeredCourses,proto3" json:"registered_courses,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ListRegisteredCoursesResponse) Reset() {
	*x = ListRegisteredCoursesResponse{}
	mi := &file_timetable_v1_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRegisteredCoursesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRegisteredCoursesResponse) ProtoMessage() {}

func (x *ListRegisteredCoursesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_timetable_v1_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRegisteredCoursesResponse.ProtoReflect.Descriptor instead.
func (*ListRegisteredCoursesResponse) Descriptor() ([]byte, []int) {
	return file_timetable_v1_service_proto_rawDescGZIP(), []int{9}
}

func (x *ListRegisteredCoursesResponse) GetRegisteredCourses() []*RegisteredCourse {
	if x != nil {
		return x.RegisteredCourses
	}
	return nil
}

type UpdateRegisteredCourseRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            *sharedpb.UUID         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          *string                `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Instructors   *string                `protobuf:"bytes,3,opt,name=instructors,proto3,oneof" json:"instructors,omitempty"`
	Credit        *string                `protobuf:"bytes,4,opt,name=credit,proto3,oneof" json:"credit,omitempty"`
	Methods       *CourseMethodList      `protobuf:"bytes,5,opt,name=methods,proto3,oneof" json:"methods,omitempty"`
	Schedules     *ScheduleList          `protobuf:"bytes,6,opt,name=schedules,proto3,oneof" json:"schedules,omitempty"`
	Memo          *string                `protobuf:"bytes,7,opt,name=memo,proto3,oneof" json:"memo,omitempty"`
	Attendance    *int32                 `protobuf:"varint,8,opt,name=attendance,proto3,oneof" json:"attendance,omitempty"`
	Absence       *int32                 `protobuf:"varint,9,opt,name=absence,proto3,oneof" json:"absence,omitempty"`
	Late          *int32                 `protobuf:"varint,10,opt,name=late,proto3,oneof" json:"late,omitempty"`
	TagIds        *sharedpb.UUIDList     `protobuf:"bytes,11,opt,name=tag_ids,json=tagIds,proto3,oneof" json:"tag_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateRegisteredCourseRequest) Reset() {
	*x = UpdateRegisteredCourseRequest{}
	mi := &file_timetable_v1_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRegisteredCourseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRegisteredCourseRequest) ProtoMessage() {}

func (x *UpdateRegisteredCourseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timetable_v1_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRegisteredCourseRequest.ProtoReflect.Descriptor instead.
func (*UpdateRegisteredCourseRequest) Descriptor() ([]byte, []int) {
	return file_timetable_v1_service_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateRegisteredCourseRequest) GetId() *sharedpb.UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *UpdateRegisteredCourseRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateRegisteredCourseRequest) GetInstructors() string {
	if x != nil && x.Instructors != nil {
		return *x.Instructors
	}
	return ""
}

func (x *UpdateRegisteredCourseRequest) GetCredit() string {
	if x != nil && x.Credit != nil {
		return *x.Credit
	}
	return ""
}

func (x *UpdateRegisteredCourseRequest) GetMethods() *CourseMethodList {
	if x != nil {
		return x.Methods
	}
	return nil
}

func (x *UpdateRegisteredCourseRequest) GetSchedules() *ScheduleList {
	if x != nil {
		return x.Schedules
	}
	return nil
}

func (x *UpdateRegisteredCourseRequest) GetMemo() string {
	if x != nil && x.Memo != nil {
		return *x.Memo
	}
	return ""
}

func (x *UpdateRegisteredCourseRequest) GetAttendance() int32 {
	if x != nil && x.Attendance != nil {
		return *x.Attendance
	}
	return 0
}

func (x *UpdateRegisteredCourseRequest) GetAbsence() int32 {
	if x != nil && x.Absence != nil {
		return *x.Absence
	}
	return 0
}

func (x *UpdateRegisteredCourseRequest) GetLate() int32 {
	if x != nil && x.Late != nil {
		return *x.Late
	}
	return 0
}

func (x *UpdateRegisteredCourseRequest) GetTagIds() *sharedpb.UUIDList {
	if x != nil {
		return x.TagIds
	}
	return nil
}

type UpdateRegisteredCourseResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	RegisteredCourse *RegisteredCourse      `protobuf:"bytes,1,opt,name=registered_course,json=registeredCourse,proto3" json:"registered_course,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *UpdateRegisteredCourseResponse) Reset() {
	*x = UpdateRegisteredCourseResponse{}
	mi := &file_timetable_v1_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRegisteredCourseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRegisteredCourseResponse) ProtoMessage() {}

func (x *UpdateRegisteredCourseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_timetable_v1_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRegisteredCourseResponse.ProtoReflect.Descriptor instead.
func (*UpdateRegisteredCourseResponse) Descriptor() ([]byte, []int) {
	return file_timetable_v1_service_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateRegisteredCourseResponse) GetRegisteredCourse() *RegisteredCourse {
	if x != nil {
		return x.RegisteredCourse
	}
	return nil
}

type DeleteRegisteredCourseRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            *sharedpb.UUID         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRegisteredCourseRequest) Reset() {
	*x = DeleteRegisteredCourseRequest{}
	mi := &file_timetable_v1_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRegisteredCourseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRegisteredCourseRequest) ProtoMessage() {}

func (x *DeleteRegisteredCourseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timetable_v1_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRegisteredCourseRequest.ProtoReflect.Descriptor instead.
func (*DeleteRegisteredCourseRequest) Descriptor() ([]byte, []int) {
	return file_timetable_v1_service_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteRegisteredCourseRequest) GetId() *sharedpb.UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

type DeleteRegisteredCourseResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRegisteredCourseResponse) Reset() {
	*x = DeleteRegisteredCourseResponse{}
	mi := &file_timetable_v1_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRegisteredCourseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRegisteredCourseResponse) ProtoMessage() {}

func (x *DeleteRegisteredCourseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_timetable_v1_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRegisteredCourseResponse.ProtoReflect.Descriptor instead.
func (*DeleteRegisteredCourseResponse) Descriptor() ([]byte, []int) {
	return file_timetable_v1_service_proto_rawDescGZIP(), []int{13}
}

type CreateTagRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTagRequest) Reset() {
	*x = CreateTagRequest{}
	mi := &file_timetable_v1_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTagRequest) ProtoMessage() {}

func (x *CreateTagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timetable_v1_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTagRequest.ProtoReflect.Descriptor instead.
func (*CreateTagRequest) Descriptor() ([]byte, []int) {
	return file_timetable_v1_service_proto_rawDescGZIP(), []int{14}
}

func (x *CreateTagRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CreateTagResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tag           *Tag                   `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTagResponse) Reset() {
	*x = CreateTagResponse{}
	mi := &file_timetable_v1_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTagResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTagResponse) ProtoMessage() {}

func (x *CreateTagResponse) ProtoReflect() protoreflect.Message {
	mi := &file_timetable_v1_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTagResponse.ProtoReflect.Descriptor instead.
func (*CreateTagResponse) Descriptor() ([]byte, []int) {
	return file_timetable_v1_service_proto_rawDescGZIP(), []int{15}
}

func (x *CreateTagResponse) GetTag() *Tag {
	if x != nil {
		return x.Tag
	}
	return nil
}

type ListTagsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTagsRequest) Reset() {
	*x = ListTagsRequest{}
	mi := &file_timetable_v1_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTagsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTagsRequest) ProtoMessage() {}

func (x *ListTagsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timetable_v1_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTagsRequest.ProtoReflect.Descriptor instead.
func (*ListTagsRequest) Descriptor() ([]byte, []int) {
	return file_timetable_v1_service_proto_rawDescGZIP(), []int{16}
}

type ListTagsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tags          []*Tag                 `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTagsResponse) Reset() {
	*x = ListTagsResponse{}
	mi := &file_timetable_v1_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTagsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTagsResponse) ProtoMessage() {}

func (x *ListTagsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_timetable_v1_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTagsResponse.ProtoReflect.Descriptor instead.
func (*ListTagsResponse) Descriptor() ([]byte, []int) {
	return file_timetable_v1_service_proto_rawDescGZIP(), []int{17}
}

func (x *ListTagsResponse) GetTags() []*Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

type UpdateTagRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            *sharedpb.UUID         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          *string                `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTagRequest) Reset() {
	*x = UpdateTagRequest{}
	mi := &file_timetable_v1_service_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTagRequest) ProtoMessage() {}

func (x *UpdateTagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timetable_v1_service_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTagRequest.ProtoReflect.Descriptor instead.
func (*UpdateTagRequest) Descriptor() ([]byte, []int) {
	return file_timetable_v1_service_proto_rawDescGZIP(), []int{18}
}

func (x *UpdateTagRequest) GetId() *sharedpb.UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *UpdateTagRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type UpdateTagResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tag           *Tag                   `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTagResponse) Reset() {
	*x = UpdateTagResponse{}
	mi := &file_timetable_v1_service_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTagResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTagResponse) ProtoMessage() {}

func (x *UpdateTagResponse) ProtoReflect() protoreflect.Message {
	mi := &file_timetable_v1_service_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTagResponse.ProtoReflect.Descriptor instead.
func (*UpdateTagResponse) Descriptor() ([]byte, []int) {
	return file_timetable_v1_service_proto_rawDescGZIP(), []int{19}
}

func (x *UpdateTagResponse) GetTag() *Tag {
	if x != nil {
		return x.Tag
	}
	return nil
}

type DeleteTagRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            *sharedpb.UUID         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTagRequest) Reset() {
	*x = DeleteTagRequest{}
	mi := &file_timetable_v1_service_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTagRequest) ProtoMessage() {}

func (x *DeleteTagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timetable_v1_service_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTagRequest.ProtoReflect.Descriptor instead.
func (*DeleteTagRequest) Descriptor() ([]byte, []int) {
	return file_timetable_v1_service_proto_rawDescGZIP(), []int{20}
}

func (x *DeleteTagRequest) GetId() *sharedpb.UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

type DeleteTagResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTagResponse) Reset() {
	*x = DeleteTagResponse{}
	mi := &file_timetable_v1_service_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTagResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTagResponse) ProtoMessage() {}

func (x *DeleteTagResponse) ProtoReflect() protoreflect.Message {
	mi := &file_timetable_v1_service_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTagResponse.ProtoReflect.Descriptor instead.
func (*DeleteTagResponse) Descriptor() ([]byte, []int) {
	return file_timetable_v1_service_proto_rawDescGZIP(), []int{21}
}

type RearrangeTagsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Please specify all tag ids that the user have.
	Ids           []*sharedpb.UUID `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RearrangeTagsRequest) Reset() {
	*x = RearrangeTagsRequest{}
	mi := &file_timetable_v1_service_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RearrangeTagsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RearrangeTagsRequest) ProtoMessage() {}

func (x *RearrangeTagsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timetable_v1_service_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RearrangeTagsRequest.ProtoReflect.Descriptor instead.
func (*RearrangeTagsRequest) Descriptor() ([]byte, []int) {
	return file_timetable_v1_service_proto_rawDescGZIP(), []int{22}
}

func (x *RearrangeTagsRequest) GetIds() []*sharedpb.UUID {
	if x != nil {
		return x.Ids
	}
	return nil
}

type RearrangeTagsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tags          []*Tag                 `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RearrangeTagsResponse) Reset() {
	*x = RearrangeTagsResponse{}
	mi := &file_timetable_v1_service_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RearrangeTagsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RearrangeTagsResponse) ProtoMessage() {}

func (x *RearrangeTagsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_timetable_v1_service_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RearrangeTagsResponse.ProtoReflect.Descriptor instead.
func (*RearrangeTagsResponse) Descriptor() ([]byte, []int) {
	return file_timetable_v1_service_proto_rawDescGZIP(), []int{23}
}

func (x *RearrangeTagsResponse) GetTags() []*Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

var File_timetable_v1_service_proto protoreflect.FileDescriptor

const file_timetable_v1_service_proto_rawDesc = "" +
	"\n" +
	"\x1atimetable/v1/service.proto\x12\ftimetable.v1\x1a\x13shared/option.proto\x1a\x11shared/type.proto\x1a\x17timetable/v1/type.proto\"[\n" +
	"\x19ListCoursesByCodesRequest\x12(\n" +
	"\x04year\x18\x01 \x01(\v2\x14.shared.AcademicYearR\x04year\x12\x14\n" +
	"\x05codes\x18\x02 \x03(\tR\x05codes\"L\n" +
	"\x1aListCoursesByCodesResponse\x12.\n" +
	"\acourses\x18\x01 \x03(\v2\x14.timetable.v1.CourseR\acourses\"\xa6\x03\n" +
	"\x14SearchCoursesRequest\x12(\n" +
	"\x04year\x18\x01 \x01(\v2\x14.shared.AcademicYearR\x04year\x12\x1a\n" +
	"\bkeywords\x18\x02 \x03(\tR\bkeywords\x124\n" +
	"\x16code_prefixes_included\x18\x03 \x03(\tR\x14codePrefixesIncluded\x124\n" +
	"\x16code_prefixes_excluded\x18\x04 \x03(\tR\x14codePrefixesExcluded\x12P\n" +
	"\x18schedules_fully_included\x18\x05 \x03(\v2\x16.timetable.v1.ScheduleR\x16schedulesFullyIncluded\x12\\\n" +
	"\x1eschedules_partially_overlapped\x18\x06 \x03(\v2\x16.timetable.v1.ScheduleR\x1cschedulesPartiallyOverlapped\x12\x14\n" +
	"\x05limit\x18\a \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\b \x01(\x05R\x06offset\"G\n" +
	"\x15SearchCoursesResponse\x12.\n" +
	"\acourses\x18\x01 \x03(\v2\x14.timetable.v1.CourseR\acourses\"g\n" +
	"%CreateRegisteredCoursesByCodesRequest\x12(\n" +
	"\x04year\x18\x01 \x01(\v2\x14.shared.AcademicYearR\x04year\x12\x14\n" +
	"\x05codes\x18\x02 \x03(\tR\x05codes\"w\n" +
	"&CreateRegisteredCoursesByCodesResponse\x12M\n" +
	"\x12registered_courses\x18\x01 \x03(\v2\x1e.timetable.v1.RegisteredCourseR\x11registeredCourses\"\x8b\x02\n" +
	"%CreateRegisteredCourseManuallyRequest\x12(\n" +
	"\x04year\x18\x01 \x01(\v2\x14.shared.AcademicYearR\x04year\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vinstructors\x18\x03 \x01(\tR\vinstructors\x12\x16\n" +
	"\x06credit\x18\x04 \x01(\tR\x06credit\x124\n" +
	"\amethods\x18\x05 \x03(\x0e2\x1a.timetable.v1.CourseMethodR\amethods\x124\n" +
	"\tschedules\x18\x06 \x03(\v2\x16.timetable.v1.ScheduleR\tschedules\"u\n" +
	"&CreateRegisteredCourseManuallyResponse\x12K\n" +
	"\x11registered_course\x18\x01 \x01(\v2\x1e.timetable.v1.RegisteredCourseR\x10registeredCourse\"V\n" +
	"\x1cListRegisteredCoursesRequest\x12-\n" +
	"\x04year\x18\x01 \x01(\v2\x14.shared.AcademicYearH\x00R\x04year\x88\x01\x01B\a\n" +
	"\x05_year\"n\n" +
	"\x1dListRegisteredCoursesResponse\x12M\n" +
	"\x12registered_courses\x18\x01 \x03(\v2\x1e.timetable.v1.RegisteredCourseR\x11registeredCourses\"\xb5\x04\n" +
	"\x1dUpdateRegisteredCourseRequest\x12\x1c\n" +
	"\x02id\x18\x01 \x01(\v2\f.shared.UUIDR\x02id\x12\x17\n" +
	"\x04name\x18\x02 \x01(\tH\x00R\x04name\x88\x01\x01\x12%\n" +
	"\vinstructors\x18\x03 \x01(\tH\x01R\vinstructors\x88\x01\x01\x12\x1b\n" +
	"\x06credit\x18\x04 \x01(\tH\x02R\x06credit\x88\x01\x01\x12=\n" +
	"\amethods\x18\x05 \x01(\v2\x1e.timetable.v1.CourseMethodListH\x03R\amethods\x88\x01\x01\x12=\n" +
	"\tschedules\x18\x06 \x01(\v2\x1a.timetable.v1.ScheduleListH\x04R\tschedules\x88\x01\x01\x12\x17\n" +
	"\x04memo\x18\a \x01(\tH\x05R\x04memo\x88\x01\x01\x12#\n" +
	"\n" +
	"attendance\x18\b \x01(\x05H\x06R\n" +
	"attendance\x88\x01\x01\x12\x1d\n" +
	"\aabsence\x18\t \x01(\x05H\aR\aabsence\x88\x01\x01\x12\x17\n" +
	"\x04late\x18\n" +
	" \x01(\x05H\bR\x04late\x88\x01\x01\x12.\n" +
	"\atag_ids\x18\v \x01(\v2\x10.shared.UUIDListH\tR\x06tagIds\x88\x01\x01B\a\n" +
	"\x05_nameB\x0e\n" +
	"\f_instructorsB\t\n" +
	"\a_creditB\n" +
	"\n" +
	"\b_methodsB\f\n" +
	"\n" +
	"_schedulesB\a\n" +
	"\x05_memoB\r\n" +
	"\v_attendanceB\n" +
	"\n" +
	"\b_absenceB\a\n" +
	"\x05_lateB\n" +
	"\n" +
	"\b_tag_ids\"m\n" +
	"\x1eUpdateRegisteredCourseResponse\x12K\n" +
	"\x11registered_course\x18\x01 \x01(\v2\x1e.timetable.v1.RegisteredCourseR\x10registeredCourse\"=\n" +
	"\x1dDeleteRegisteredCourseRequest\x12\x1c\n" +
	"\x02id\x18\x01 \x01(\v2\f.shared.UUIDR\x02id\" \n" +
	"\x1eDeleteRegisteredCourseResponse\"&\n" +
	"\x10CreateTagRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"8\n" +
	"\x11CreateTagResponse\x12#\n" +
	"\x03tag\x18\x01 \x01(\v2\x11.timetable.v1.TagR\x03tag\"\x11\n" +
	"\x0fListTagsRequest\"9\n" +
	"\x10ListTagsResponse\x12%\n" +
	"\x04tags\x18\x01 \x03(\v2\x11.timetable.v1.TagR\x04tags\"R\n" +
	"\x10UpdateTagRequest\x12\x1c\n" +
	"\x02id\x18\x01 \x01(\v2\f.shared.UUIDR\x02id\x12\x17\n" +
	"\x04name\x18\x02 \x01(\tH\x00R\x04name\x88\x01\x01B\a\n" +
	"\x05_name\"8\n" +
	"\x11UpdateTagResponse\x12#\n" +
	"\x03tag\x18\x01 \x01(\v2\x11.timetable.v1.TagR\x03tag\"0\n" +
	"\x10DeleteTagRequest\x12\x1c\n" +
	"\x02id\x18\x01 \x01(\v2\f.shared.UUIDR\x02id\"\x13\n" +
	"\x11DeleteTagResponse\"6\n" +
	"\x14RearrangeTagsRequest\x12\x1e\n" +
	"\x03ids\x18\x01 \x03(\v2\f.shared.UUIDR\x03ids\">\n" +
	"\x15RearrangeTagsResponse\x12%\n" +
	"\x04tags\x18\x01 \x03(\v2\x11.timetable.v1.TagR\x04tags2\x83\f\n" +
	"\x10TimetableService\x12r\n" +
	"\x12ListCoursesByCodes\x12'.timetable.v1.ListCoursesByCodesRequest\x1a(.timetable.v1.ListCoursesByCodesResponse\"\t\x82\xb5\x18\x02\b\x01\x90\x02\x01\x12c\n" +
	"\rSearchCourses\x12\".timetable.v1.SearchCoursesRequest\x1a#.timetable.v1.SearchCoursesResponse\"\t\x82\xb5\x18\x02\b\x01\x90\x02\x01\x12\xd6\x01\n" +
	"\x1eCreateRegisteredCoursesByCodes\x123.timetable.v1.CreateRegisteredCoursesByCodesRequest\x1a4.timetable.v1.CreateRegisteredCoursesByCodesResponse\"I\x82\xb5\x18E\b\x03\x12\x18timetable.CourseNotFound\x12'timetable.RegisteredCourseAlreadyExists\x12\x93\x01\n" +
	"\x1eCreateRegisteredCourseManually\x123.timetable.v1.CreateRegisteredCourseManuallyRequest\x1a4.timetable.v1.CreateRegisteredCourseManuallyResponse\"\x06\x82\xb5\x18\x02\b\x03\x12{\n" +
	"\x15ListRegisteredCourses\x12*.timetable.v1.ListRegisteredCoursesRequest\x1a+.timetable.v1.ListRegisteredCoursesResponse\"\t\x82\xb5\x18\x02\b\x03\x90\x02\x01\x12\x9f\x01\n" +
	"\x16UpdateRegisteredCourse\x12+.timetable.v1.UpdateRegisteredCourseRequest\x1a,.timetable.v1.UpdateRegisteredCourseResponse\"*\x82\xb5\x18&\b\x03\x12\"timetable.RegisteredCourseNotFound\x12\x9f\x01\n" +
	"\x16DeleteRegisteredCourse\x12+.timetable.v1.DeleteRegisteredCourseRequest\x1a,.timetable.v1.DeleteRegisteredCourseResponse\"*\x82\xb5\x18&\b\x03\x12\"timetable.RegisteredCourseNotFound\x12T\n" +
	"\tCreateTag\x12\x1e.timetable.v1.CreateTagRequest\x1a\x1f.timetable.v1.CreateTagResponse\"\x06\x82\xb5\x18\x02\b\x03\x12T\n" +
	"\bListTags\x12\x1d.timetable.v1.ListTagsRequest\x1a\x1e.timetable.v1.ListTagsResponse\"\t\x82\xb5\x18\x02\b\x03\x90\x02\x01\x12k\n" +
	"\tUpdateTag\x12\x1e.timetable.v1.UpdateTagRequest\x1a\x1f.timetable.v1.UpdateTagResponse\"\x1d\x82\xb5\x18\x19\b\x03\x12\x15timetable.TagNotFound\x12k\n" +
	"\tDeleteTag\x12\x1e.timetable.v1.DeleteTagRequest\x1a\x1f.timetable.v1.DeleteTagResponse\"\x1d\x82\xb5\x18\x19\b\x03\x12\x15timetable.TagNotFound\x12`\n" +
	"\rRearrangeTags\x12\".timetable.v1.RearrangeTagsRequest\x1a#.timetable.v1.RearrangeTagsResponse\"\x06\x82\xb5\x18\x02\b\x03Bm\n" +
	"\x1bnet.twinte.api.timetable.v1ZNgithub.com/twin-te/twin-te/back/handler/api/v4/rpcgen/timetable/v1;timetablev1b\x06proto3"

var (
	file_timetable_v1_service_proto_rawDescOnce sync.Once
	file_timetable_v1_service_proto_rawDescData []byte
)

func file_timetable_v1_service_proto_rawDescGZIP() []byte {
	file_timetable_v1_service_proto_rawDescOnce.Do(func() {
		file_timetable_v1_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_timetable_v1_service_proto_rawDesc), len(file_timetable_v1_service_proto_rawDesc)))
	})
	return file_timetable_v1_service_proto_rawDescData
}

var file_timetable_v1_service_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_timetable_v1_service_proto_goTypes = []any{
	(*ListCoursesByCodesRequest)(nil),              // 0: timetable.v1.ListCoursesByCodesRequest
	(*ListCoursesByCodesResponse)(nil),             // 1: timetable.v1.ListCoursesByCodesResponse
	(*SearchCoursesRequest)(nil),                   // 2: timetable.v1.SearchCoursesRequest
	(*SearchCoursesResponse)(nil),                  // 3: timetable.v1.SearchCoursesResponse
	(*CreateRegisteredCoursesByCodesRequest)(nil),  // 4: timetable.v1.CreateRegisteredCoursesByCodesRequest
	(*CreateRegisteredCoursesByCodesResponse)(nil), // 5: timetable.v1.CreateRegisteredCoursesByCodesResponse
	(*CreateRegisteredCourseManuallyRequest)(nil),  // 6: timetable.v1.CreateRegisteredCourseManuallyRequest
	(*CreateRegisteredCourseManuallyResponse)(nil), // 7: timetable.v1.CreateRegisteredCourseManuallyResponse
	(*ListRegisteredCoursesRequest)(nil),           // 8: timetable.v1.ListRegisteredCoursesRequest
	(*ListRegisteredCoursesResponse)(nil),          // 9: timetable.v1.ListRegisteredCoursesResponse
	(*UpdateRegisteredCourseRequest)(nil),          // 10: timetable.v1.UpdateRegisteredCourseRequest
	(*UpdateRegisteredCourseResponse)(nil),         // 11: timetable.v1.UpdateRegisteredCourseResponse
	(*DeleteRegisteredCourseRequest)(nil),          // 12: timetable.v1.DeleteRegisteredCourseRequest
	(*DeleteRegisteredCourseResponse)(nil),         // 13: timetable.v1.DeleteRegisteredCourseResponse
	(*CreateTagRequest)(nil),                       // 14: timetable.v1.CreateTagRequest
	(*CreateTagResponse)(nil),                      // 15: timetable.v1.CreateTagResponse
	(*ListTagsRequest)(nil),                        // 16: timetable.v1.ListTagsRequest
	(*ListTagsResponse)(nil),                       // 17: timetable.v1.ListTagsResponse
	(*UpdateTagRequest)(nil),                       // 18: timetable.v1.UpdateTagRequest
	(*UpdateTagResponse)(nil),                      // 19: timetable.v1.UpdateTagResponse
	(*DeleteTagRequest)(nil),                       // 20: timetable.v1.DeleteTagRequest
	(*DeleteTagResponse)(nil),                      // 21: timetable.v1.DeleteTagResponse
	(*RearrangeTagsRequest)(nil),                   // 22: timetable.v1.RearrangeTagsRequest
	(*RearrangeTagsResponse)(nil),                  // 23: timetable.v1.RearrangeTagsResponse
	(*sharedpb.AcademicYear)(nil),                  // 24: shared.AcademicYear
	(*Course)(nil),                                 // 25: timetable.v1.Course
	(*Schedule)(nil),                               // 26: timetable.v1.Schedule
	(*RegisteredCourse)(nil),                       // 27: timetable.v1.RegisteredCourse
	(CourseMethod)(0),                              // 28: timetable.v1.CourseMethod
	(*sharedpb.UUID)(nil),                          // 29: shared.UUID
	(*CourseMethodList)(nil),                       // 30: timetable.v1.CourseMethodList
	(*ScheduleList)(nil),                           // 31: timetable.v1.ScheduleList
	(*sharedpb.UUIDList)(nil),                      // 32: shared.UUIDList
	(*Tag)(nil),                                    // 33: timetable.v1.Tag
}
var file_timetable_v1_service_proto_depIdxs = []int32{
	24, // 0: timetable.v1.ListCoursesByCodesRequest.year:type_name -> shared.AcademicYear
	25, // 1: timetable.v1.ListCoursesByCodesResponse.courses:type_name -> timetable.v1.Course
	24, // 2: timetable.v1.SearchCoursesRequest.year:type_name -> shared.AcademicYear
	26, // 3: timetable.v1.SearchCoursesRequest.schedules_fully_included:type_name -> timetable.v1.Schedule
	26, // 4: timetable.v1.SearchCoursesRequest.schedules_partially_overlapped:type_name -> timetable.v1.Schedule
	25, // 5: timetable.v1.SearchCoursesResponse.courses:type_name -> timetable.v1.Course
	24, // 6: timetable.v1.CreateRegisteredCoursesByCodesRequest.year:type_name -> shared.AcademicYear
	27, // 7: timetable.v1.CreateRegisteredCoursesByCodesResponse.registered_courses:type_name -> timetable.v1.RegisteredCourse
	24, // 8: timetable.v1.CreateRegisteredCourseManuallyRequest.year:type_name -> shared.AcademicYear
	28, // 9: timetable.v1.CreateRegisteredCourseManuallyRequest.methods:type_name -> timetable.v1.CourseMethod
	26, // 10: timetable.v1.CreateRegisteredCourseManuallyRequest.schedules:type_name -> timetable.v1.Schedule
	27, // 11: timetable.v1.CreateRegisteredCourseManuallyResponse.registered_course:type_name -> timetable.v1.RegisteredCourse
	24, // 12: timetable.v1.ListRegisteredCoursesRequest.year:type_name -> shared.AcademicYear
	27, // 13: timetable.v1.ListRegisteredCoursesResponse.registered_courses:type_name -> timetable.v1.RegisteredCourse
	29, // 14: timetable.v1.UpdateRegisteredCourseRequest.id:type_name -> shared.UUID
	30, // 15: timetable.v1.UpdateRegisteredCourseRequest.methods:type_name -> timetable.v1.CourseMethodList
	31, // 16: timetable.v1.UpdateRegisteredCourseRequest.schedules:type_name -> timetable.v1.ScheduleList
	32, // 17: timetable.v1.UpdateRegisteredCourseRequest.tag_ids:type_name -> shared.UUIDList
	27, // 18: timetable.v1.UpdateRegisteredCourseResponse.registered_course:type_name -> timetable.v1.RegisteredCourse
	29, // 19: timetable.v1.DeleteRegisteredCourseRequest.id:type_name -> shared.UUID
	33, // 20: timetable.v1.CreateTagResponse.tag:type_name -> timetable.v1.Tag
	33, // 21: timetable.v1.ListTagsResponse.tags:type_name -> timetable.v1.Tag
	29, // 22: timetable.v1.UpdateTagRequest.id:type_name -> shared.UUID
	33, // 23: timetable.v1.UpdateTagResponse.tag:type_name -> timetable.v1.Tag
	29, // 24: timetable.v1.DeleteTagRequest.id:type_name -> shared.UUID
	29, // 25: timetable.v1.RearrangeTagsRequest.ids:type_name -> shared.UUID
	33, // 26: timetable.v1.RearrangeTagsResponse.tags:type_name -> timetable.v1.Tag
	0,  // 27: timetable.v1.TimetableService.ListCoursesByCodes:input_type -> timetable.v1.ListCoursesByCodesRequest
	2,  // 28: timetable.v1.TimetableService.SearchCourses:input_type -> timetable.v1.SearchCoursesRequest
	4,  // 29: timetable.v1.TimetableService.CreateRegisteredCoursesByCodes:input_type -> timetable.v1.CreateRegisteredCoursesByCodesRequest
	6,  // 30: timetable.v1.TimetableService.CreateRegisteredCourseManually:input_type -> timetable.v1.CreateRegisteredCourseManuallyRequest
	8,  // 31: timetable.v1.TimetableService.ListRegisteredCourses:input_type -> timetable.v1.ListRegisteredCoursesRequest
	10, // 32: timetable.v1.TimetableService.UpdateRegisteredCourse:input_type -> timetable.v1.UpdateRegisteredCourseRequest
	12, // 33: timetable.v1.TimetableService.DeleteRegisteredCourse:input_type -> timetable.v1.DeleteRegisteredCourseRequest
	14, // 34: timetable.v1.TimetableService.CreateTag:input_type -> timetable.v1.CreateTagRequest
	16, // 35: timetable.v1.TimetableService.ListTags:input_type -> timetable.v1.ListTagsRequest
	18, // 36: timetable.v1.TimetableService.UpdateTag:input_type -> timetable.v1.UpdateTagRequest
	20, // 37: timetable.v1.TimetableService.DeleteTag:input_type -> timetable.v1.DeleteTagRequest
	22, // 38: timetable.v1.TimetableService.RearrangeTags:input_type -> timetable.v1.RearrangeTagsRequest
	1,  // 39: timetable.v1.TimetableService.ListCoursesByCodes:output_type -> timetable.v1.ListCoursesByCodesResponse
	3,  // 40: timetable.v1.TimetableService.SearchCourses:output_type -> timetable.v1.SearchCoursesResponse
	5,  // 41: timetable.v1.TimetableService.CreateRegisteredCoursesByCodes:output_type -> timetable.v1.CreateRegisteredCoursesByCodesResponse
	7,  // 42: timetable.v1.TimetableService.CreateRegisteredCourseManually:output_type -> timetable.v1.CreateRegisteredCourseManuallyResponse
	9,  // 43: timetable.v1.TimetableService.ListRegisteredCourses:output_type -> timetable.v1.ListRegisteredCoursesResponse
	11, // 44: timetable.v1.TimetableService.UpdateRegisteredCourse:output_type -> timetable.v1.UpdateRegisteredCourseResponse
	13, // 45: timetable.v1.TimetableService.DeleteRegisteredCourse:output_type -> timetable.v1.DeleteRegisteredCourseResponse
	15, // 46: timetable.v1.TimetableService.CreateTag:output_type -> timetable.v1.CreateTagResponse
	17, // 47: timetable.v1.TimetableService.ListTags:output_type -> timetable.v1.ListTagsResponse
	19, // 48: timetable.v1.TimetableService.UpdateTag:output_type -> timetable.v1.UpdateTagResponse
	21, // 49: timetable.v1.TimetableService.DeleteTag:output_type -> timetable.v1.DeleteTagResponse
	23, // 50: timetable.v1.TimetableService.RearrangeTags:output_type -> timetable.v1.RearrangeTagsResponse
	39, // [39:51] is the sub-list for method output_type
	27, // [27:39] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_timetable_v1_service_proto_init() }
func file_timetable_v1_service_proto_init() {
	if File_timetable_v1_service_proto != nil {
		return
	}
	file_timetable_v1_type_proto_init()
	file_timetable_v1_service_proto_msgTypes[8].OneofWrappers = []any{}
	file_timetable_v1_service_proto_msgTypes[10].OneofWrappers = []any{}
	file_timetable_v1_service_proto_msgTypes[18].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_timetable_v1_service_proto_rawDesc), len(file_timetable_v1_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_timetable_v1_service_proto_goTypes,
		DependencyIndexes: file_timetable_v1_service_proto_depIdxs,
		MessageInfos:      file_timetable_v1_service_proto_msgTypes,
	}.Build()
	File_timetable_v1_service_proto = out.File
	file_timetable_v1_service_proto_goTypes = nil
	file_timetable_v1_service_proto_depIdxs = nil
}
