// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: donation/v1/type.proto

package donationv1

import (
	sharedpb "github.com/twin-te/twin-te/back/handler/api/v4/rpcgen/sharedpb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PaymentType int32

const (
	PaymentType_PAYMENT_TYPE_UNSPECIFIED  PaymentType = 0
	PaymentType_PAYMENT_TYPE_ONE_TIME     PaymentType = 1
	PaymentType_PAYMENT_TYPE_SUBSCRIPTION PaymentType = 2
)

// Enum value maps for PaymentType.
var (
	PaymentType_name = map[int32]string{
		0: "PAYMENT_TYPE_UNSPECIFIED",
		1: "PAYMENT_TYPE_ONE_TIME",
		2: "PAYMENT_TYPE_SUBSCRIPTION",
	}
	PaymentType_value = map[string]int32{
		"PAYMENT_TYPE_UNSPECIFIED":  0,
		"PAYMENT_TYPE_ONE_TIME":     1,
		"PAYMENT_TYPE_SUBSCRIPTION": 2,
	}
)

func (x PaymentType) Enum() *PaymentType {
	p := new(PaymentType)
	*p = x
	return p
}

func (x PaymentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PaymentType) Descriptor() protoreflect.EnumDescriptor {
	return file_donation_v1_type_proto_enumTypes[0].Descriptor()
}

func (PaymentType) Type() protoreflect.EnumType {
	return &file_donation_v1_type_proto_enumTypes[0]
}

func (x PaymentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PaymentType.Descriptor instead.
func (PaymentType) EnumDescriptor() ([]byte, []int) {
	return file_donation_v1_type_proto_rawDescGZIP(), []int{0}
}

type PaymentStatus int32

const (
	PaymentStatus_PAYMENT_STATUS_UNSPECIFIED PaymentStatus = 0
	PaymentStatus_PAYMENT_STATUS_PENDING     PaymentStatus = 1
	PaymentStatus_PAYMENT_STATUS_CANCELED    PaymentStatus = 2
	PaymentStatus_PAYMENT_STATUS_SUCCEEDED   PaymentStatus = 3
)

// Enum value maps for PaymentStatus.
var (
	PaymentStatus_name = map[int32]string{
		0: "PAYMENT_STATUS_UNSPECIFIED",
		1: "PAYMENT_STATUS_PENDING",
		2: "PAYMENT_STATUS_CANCELED",
		3: "PAYMENT_STATUS_SUCCEEDED",
	}
	PaymentStatus_value = map[string]int32{
		"PAYMENT_STATUS_UNSPECIFIED": 0,
		"PAYMENT_STATUS_PENDING":     1,
		"PAYMENT_STATUS_CANCELED":    2,
		"PAYMENT_STATUS_SUCCEEDED":   3,
	}
)

func (x PaymentStatus) Enum() *PaymentStatus {
	p := new(PaymentStatus)
	*p = x
	return p
}

func (x PaymentStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PaymentStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_donation_v1_type_proto_enumTypes[1].Descriptor()
}

func (PaymentStatus) Type() protoreflect.EnumType {
	return &file_donation_v1_type_proto_enumTypes[1]
}

func (x PaymentStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PaymentStatus.Descriptor instead.
func (PaymentStatus) EnumDescriptor() ([]byte, []int) {
	return file_donation_v1_type_proto_rawDescGZIP(), []int{1}
}

type PaymentUser struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId        *sharedpb.UUID         `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	DisplayName   *string                `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3,oneof" json:"display_name,omitempty"`
	Link          *string                `protobuf:"bytes,4,opt,name=link,proto3,oneof" json:"link,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PaymentUser) Reset() {
	*x = PaymentUser{}
	mi := &file_donation_v1_type_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaymentUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentUser) ProtoMessage() {}

func (x *PaymentUser) ProtoReflect() protoreflect.Message {
	mi := &file_donation_v1_type_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentUser.ProtoReflect.Descriptor instead.
func (*PaymentUser) Descriptor() ([]byte, []int) {
	return file_donation_v1_type_proto_rawDescGZIP(), []int{0}
}

func (x *PaymentUser) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PaymentUser) GetUserId() *sharedpb.UUID {
	if x != nil {
		return x.UserId
	}
	return nil
}

func (x *PaymentUser) GetDisplayName() string {
	if x != nil && x.DisplayName != nil {
		return *x.DisplayName
	}
	return ""
}

func (x *PaymentUser) GetLink() string {
	if x != nil && x.Link != nil {
		return *x.Link
	}
	return ""
}

type PaymentHistory struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Id            string                    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type          PaymentType               `protobuf:"varint,2,opt,name=type,proto3,enum=donation.v1.PaymentType" json:"type,omitempty"`
	Status        PaymentStatus             `protobuf:"varint,3,opt,name=status,proto3,enum=donation.v1.PaymentStatus" json:"status,omitempty"`
	Amount        int32                     `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`
	CreatedAt     *sharedpb.RFC3339DateTime `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PaymentHistory) Reset() {
	*x = PaymentHistory{}
	mi := &file_donation_v1_type_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaymentHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentHistory) ProtoMessage() {}

func (x *PaymentHistory) ProtoReflect() protoreflect.Message {
	mi := &file_donation_v1_type_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentHistory.ProtoReflect.Descriptor instead.
func (*PaymentHistory) Descriptor() ([]byte, []int) {
	return file_donation_v1_type_proto_rawDescGZIP(), []int{1}
}

func (x *PaymentHistory) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PaymentHistory) GetType() PaymentType {
	if x != nil {
		return x.Type
	}
	return PaymentType_PAYMENT_TYPE_UNSPECIFIED
}

func (x *PaymentHistory) GetStatus() PaymentStatus {
	if x != nil {
		return x.Status
	}
	return PaymentStatus_PAYMENT_STATUS_UNSPECIFIED
}

func (x *PaymentHistory) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *PaymentHistory) GetCreatedAt() *sharedpb.RFC3339DateTime {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type SubscriptionPlan struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Amount        int32                  `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscriptionPlan) Reset() {
	*x = SubscriptionPlan{}
	mi := &file_donation_v1_type_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscriptionPlan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscriptionPlan) ProtoMessage() {}

func (x *SubscriptionPlan) ProtoReflect() protoreflect.Message {
	mi := &file_donation_v1_type_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscriptionPlan.ProtoReflect.Descriptor instead.
func (*SubscriptionPlan) Descriptor() ([]byte, []int) {
	return file_donation_v1_type_proto_rawDescGZIP(), []int{2}
}

func (x *SubscriptionPlan) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SubscriptionPlan) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SubscriptionPlan) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type Subscription struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Id            string                    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Plan          *SubscriptionPlan         `protobuf:"bytes,2,opt,name=plan,proto3" json:"plan,omitempty"`
	IsActive      bool                      `protobuf:"varint,3,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	CreatedAt     *sharedpb.RFC3339DateTime `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Subscription) Reset() {
	*x = Subscription{}
	mi := &file_donation_v1_type_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Subscription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Subscription) ProtoMessage() {}

func (x *Subscription) ProtoReflect() protoreflect.Message {
	mi := &file_donation_v1_type_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Subscription.ProtoReflect.Descriptor instead.
func (*Subscription) Descriptor() ([]byte, []int) {
	return file_donation_v1_type_proto_rawDescGZIP(), []int{3}
}

func (x *Subscription) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Subscription) GetPlan() *SubscriptionPlan {
	if x != nil {
		return x.Plan
	}
	return nil
}

func (x *Subscription) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *Subscription) GetCreatedAt() *sharedpb.RFC3339DateTime {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type Contributor struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DisplayName   string                 `protobuf:"bytes,1,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Link          *string                `protobuf:"bytes,2,opt,name=link,proto3,oneof" json:"link,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Contributor) Reset() {
	*x = Contributor{}
	mi := &file_donation_v1_type_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Contributor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Contributor) ProtoMessage() {}

func (x *Contributor) ProtoReflect() protoreflect.Message {
	mi := &file_donation_v1_type_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Contributor.ProtoReflect.Descriptor instead.
func (*Contributor) Descriptor() ([]byte, []int) {
	return file_donation_v1_type_proto_rawDescGZIP(), []int{4}
}

func (x *Contributor) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *Contributor) GetLink() string {
	if x != nil && x.Link != nil {
		return *x.Link
	}
	return ""
}

var File_donation_v1_type_proto protoreflect.FileDescriptor

const file_donation_v1_type_proto_rawDesc = "" +
	"\n" +
	"\x16donation/v1/type.proto\x12\vdonation.v1\x1a\x11shared/type.proto\"\x9f\x01\n" +
	"\vPaymentUser\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12%\n" +
	"\auser_id\x18\x02 \x01(\v2\f.shared.UUIDR\x06userId\x12&\n" +
	"\fdisplay_name\x18\x03 \x01(\tH\x00R\vdisplayName\x88\x01\x01\x12\x17\n" +
	"\x04link\x18\x04 \x01(\tH\x01R\x04link\x88\x01\x01B\x0f\n" +
	"\r_display_nameB\a\n" +
	"\x05_link\"\xd2\x01\n" +
	"\x0ePaymentHistory\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12,\n" +
	"\x04type\x18\x02 \x01(\x0e2\x18.donation.v1.PaymentTypeR\x04type\x122\n" +
	"\x06status\x18\x03 \x01(\x0e2\x1a.donation.v1.PaymentStatusR\x06status\x12\x16\n" +
	"\x06amount\x18\x04 \x01(\x05R\x06amount\x126\n" +
	"\n" +
	"created_at\x18\x05 \x01(\v2\x17.shared.RFC3339DateTimeR\tcreatedAt\"N\n" +
	"\x10SubscriptionPlan\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x16\n" +
	"\x06amount\x18\x03 \x01(\x05R\x06amount\"\xa6\x01\n" +
	"\fSubscription\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x121\n" +
	"\x04plan\x18\x02 \x01(\v2\x1d.donation.v1.SubscriptionPlanR\x04plan\x12\x1b\n" +
	"\tis_active\x18\x03 \x01(\bR\bisActive\x126\n" +
	"\n" +
	"created_at\x18\x04 \x01(\v2\x17.shared.RFC3339DateTimeR\tcreatedAt\"R\n" +
	"\vContributor\x12!\n" +
	"\fdisplay_name\x18\x01 \x01(\tR\vdisplayName\x12\x17\n" +
	"\x04link\x18\x02 \x01(\tH\x00R\x04link\x88\x01\x01B\a\n" +
	"\x05_link*e\n" +
	"\vPaymentType\x12\x1c\n" +
	"\x18PAYMENT_TYPE_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15PAYMENT_TYPE_ONE_TIME\x10\x01\x12\x1d\n" +
	"\x19PAYMENT_TYPE_SUBSCRIPTION\x10\x02*\x86\x01\n" +
	"\rPaymentStatus\x12\x1e\n" +
	"\x1aPAYMENT_STATUS_UNSPECIFIED\x10\x00\x12\x1a\n" +
	"\x16PAYMENT_STATUS_PENDING\x10\x01\x12\x1b\n" +
	"\x17PAYMENT_STATUS_CANCELED\x10\x02\x12\x1c\n" +
	"\x18PAYMENT_STATUS_SUCCEEDED\x10\x03Bj\n" +
	"\x1anet.twinte.api.donation.v1ZLgithub.com/twin-te/twin-te/back/handler/api/v4/rpcgen/donation/v1;donationv1b\x06proto3"

var (
	file_donation_v1_type_proto_rawDescOnce sync.Once
	file_donation_v1_type_proto_rawDescData []byte
)

func file_donation_v1_type_proto_rawDescGZIP() []byte {
	file_donation_v1_type_proto_rawDescOnce.Do(func() {
		file_donation_v1_type_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_donation_v1_type_proto_rawDesc), len(file_donation_v1_type_proto_rawDesc)))
	})
	return file_donation_v1_type_proto_rawDescData
}

var file_donation_v1_type_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_donation_v1_type_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_donation_v1_type_proto_goTypes = []any{
	(PaymentType)(0),                 // 0: donation.v1.PaymentType
	(PaymentStatus)(0),               // 1: donation.v1.PaymentStatus
	(*PaymentUser)(nil),              // 2: donation.v1.PaymentUser
	(*PaymentHistory)(nil),           // 3: donation.v1.PaymentHistory
	(*SubscriptionPlan)(nil),         // 4: donation.v1.SubscriptionPlan
	(*Subscription)(nil),             // 5: donation.v1.Subscription
	(*Contributor)(nil),              // 6: donation.v1.Contributor
	(*sharedpb.UUID)(nil),            // 7: shared.UUID
	(*sharedpb.RFC3339DateTime)(nil), // 8: shared.RFC3339DateTime
}
var file_donation_v1_type_proto_depIdxs = []int32{
	7, // 0: donation.v1.PaymentUser.user_id:type_name -> shared.UUID
	0, // 1: donation.v1.PaymentHistory.type:type_name -> donation.v1.PaymentType
	1, // 2: donation.v1.PaymentHistory.status:type_name -> donation.v1.PaymentStatus
	8, // 3: donation.v1.PaymentHistory.created_at:type_name -> shared.RFC3339DateTime
	4, // 4: donation.v1.Subscription.plan:type_name -> donation.v1.SubscriptionPlan
	8, // 5: donation.v1.Subscription.created_at:type_name -> shared.RFC3339DateTime
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_donation_v1_type_proto_init() }
func file_donation_v1_type_proto_init() {
	if File_donation_v1_type_proto != nil {
		return
	}
	file_donation_v1_type_proto_msgTypes[0].OneofWrappers = []any{}
	file_donation_v1_type_proto_msgTypes[4].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_donation_v1_type_proto_rawDesc), len(file_donation_v1_type_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_donation_v1_type_proto_goTypes,
		DependencyIndexes: file_donation_v1_type_proto_depIdxs,
		EnumInfos:         file_donation_v1_type_proto_enumTypes,
		MessageInfos:      file_donation_v1_type_proto_msgTypes,
	}.Build()
	File_donation_v1_type_proto = out.File
	file_donation_v1_type_proto_goTypes = nil
	file_donation_v1_type_proto_depIdxs = nil
}
